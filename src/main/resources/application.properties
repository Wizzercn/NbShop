nutz.application.name=nbshop
server.port=8080
server.host=0.0.0.0

jetty.contextPath=/
jetty.threadpool.idleTimeout=60000
jetty.threadpool.minThreads=10
jetty.threadpool.maxThreads=200
jetty.page.403=/error/403.html
jetty.page.404=/error/404.html
jetty.page.500=/error/500.html
#结合ftp使用,或用nginx代理ftp路径
jetty.staticPath=D://files
#开发模式静态资源
#jetty.staticPathLocal=D://NutzWk-Mini/src/main/resources/static

#ftp配置内容,可根据需要自己实现文件服务器的客户端
ftp.enabled=true
ftp.host=127.0.0.1
ftp.port=21
ftp.username=ftpwk
ftp.password=ftpwk
ftp.timeout=30

redis.host=127.0.0.1
redis.port=6379
redis.timeout=2000
redis.max_redir=10
redis.database=0
redis.maxTotal=150
redis.pool.maxTotal=150
redis.pool.maxIdle=50
redis.pool.minIdle=10
#redis.password=test123
#redis集群模式设置 redis.mode=cluster
redis.mode=normal
#redis.nodes=

jdbc.url=jdbc:mysql://127.0.0.1:3306/nbshop?useUnicode=true&characterEncoding=utf8&useSSL=false
jdbc.username=root
jdbc.password=root
jdbc.validationQuery=select 1
jdbc.maxActive=150
jdbc.testWhileIdle=true
jdbc.connectionProperties=druid.stat.slowSqlMillis=2000
jdbc.defaultAutoCommit=true

#jdbc.url=jdbc:oracle:thin:@//localhost:1521/orcl
#jdbc.username=nbshop
#jdbc.password=pass
#jdbc.validationQuery=select 1 from dual
#jdbc.maxActive=10
#jdbc.testWhileIdle=true
#jdbc.connectionProperties=druid.stat.slowSqlMillis=2000
#jdbc.defaultAutoCommit=true

#shiro.ini.path=shiro.ini
shiro.objects=platformAuthc,platformRealm,authenticationStrategy
#end
shiro.ini.urls:
/platform/doLogin=anon
/assets/**=anon
/**=anon
/platform/**=platformAuthc
#end
#设置session会话超时时间(单位:毫秒)
shiro.session.manager.globalSessionTimeout=3600000
#设置redis缓存时间(单位:秒)
shiro.session.cache.redis.ttl=36000
#使用redis二级缓存
shiro.session.cache.type=lcache
shiro.session.enable=true
shiro.url.login=/platform
shiro.url.logout_redirect=/platform
shiro.url.unauth=/platform

#开发时设置本地路径,便于调试
#beetl.RESOURCE.rootLocal=D://NutzWk-Mini/src/main/resources/views/
beetl.RESOURCE.root=views/
beetl.DELIMITER_STATEMENT_START=<!--#
beetl.DELIMITER_STATEMENT_END=#-->
beetl.FT.escape=cn.wizzer.app.web.commons.ext.beetl.HtmlEscapeFormat
#用法: ${"wizzer",escape}
beetl.FT.filesize=cn.wizzer.app.web.commons.ext.beetl.FileSizeFormat
#用法: ${10241024,filesize}
beetl.FT.html2txt=cn.wizzer.app.web.commons.ext.beetl.Html2TxtFormat
#用法: ${"",html2txt="100"} 截取100字符
beetl.FT.strlen=cn.wizzer.app.web.commons.ext.beetl.StrlenFormat
#用法: ${"",strlen="100"} 截取100字符

#动态修改日志等级
logback.exts.loglevel.enabled=true
#心跳间隔(单位:秒)
logback.exts.loglevel.heartbeat=10

#为应用管理提供支持,启用获取部署版本号,结合守护进程使用
# 详见 https://github.com/Wizzercn/PythonWk
logback.exts.deploy.enabled=false
#为应用管理提供支持,部署根路径
logback.exts.deploy.root=C://data/NutzWk-Mini
